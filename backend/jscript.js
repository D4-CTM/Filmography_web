
// function made by chatgpt!
document.addEventListener("htmx:afterRequest", function(evt) {
    if (evt.detail.xhr.getResponseHeader("HX-Location")) {
        setTimeout(() => {
            window.location.reload(); // Forces full reload after redirect
        }, 100); // Small delay to ensure redirection is processed
    }
});

//function made by chatgpt!
function handleResponse(event) {
    let xhr = event.detail.xhr;
    let status = xhr.getResponseHeader("HX-Status");
    let message = xhr.getResponseHeader("HX-Message");
    
    // mainly use for panel changes, when there's no need to reload
    if (status === "202") {
        return ;
    } else if (status === "200") {
        alert(message);
    } else if (status === "400") {
        alert(message);
    } else {
        alert("Something went wrong. Please try again.");
    }
}

// function made by chatgpt!
function validateForm(event) {
    const form = event.target.closest("form");
    if (!form.checkValidity()) {
        alert("Please finish filling the form! Check if you miss any required ('*') field!");
        event.preventDefault(); // Prevent HTMX from sending request
        form.reportValidity(); // Show default validation messages
    }
}

function validateRegister(event) {
    const confPass = document.getElementsByName("confirm-password")[0];
    const pass = document.getElementsByName("password")[0];

    if (confPass.value !== pass.value) {
        alert("Passwords don't match, please try again!")
        event.preventDefault();
        return;
    }

    validateForm(event)
}

// code generated by chatgpt!
function changePfp(file) {
    const imgPreview = document.getElementById("pfp");
    if (file) {
        imgPreview.src = URL.createObjectURL(file); // Set the image preview
        imgPreview.onload = function () {
            URL.revokeObjectURL(imgPreview.src); // Free memory once loaded
        };
    } else {
        imgPreview.src = "https://ik.imagekit.io/FilmPost/default_pfp.png?updatedAt=1743482764769";
    }
}

function revealPass(element) {
    const passInput = element.previousElementSibling;

    if (passInput.type === "password") {
        passInput.type = "text";
        element.classList.remove("fa-eye");
        element.classList.add("fa-eye-slash");
    } else if (passInput.type === "text") {
        passInput.type = "password";
        element.classList.add("fa-eye");
        element.classList.remove("fa-eye-slash");
    }

}

